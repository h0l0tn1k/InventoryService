/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cz.siemens.inventory.gen.api;

import cz.siemens.inventory.gen.model.Device;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Api(value = "devices", description = "the devices API")
public interface DevicesApi {

    Logger log = LoggerFactory.getLogger(DevicesApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Creates new Device", nickname = "createDevice", notes = "", response = Device.class, tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Device created", response = Device.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/devices",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Device> createDevice(@ApiParam(value = "Device object that needs to be created" ,required=true )  @Valid @RequestBody Device body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}", Device.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Deletes an device", nickname = "deleteDevice", notes = "", tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Device was deleted."),
        @ApiResponse(code = 404, message = "Specified device does not exist.") })
    @RequestMapping(value = "/devices/{deviceId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteDevice(@ApiParam(value = "Device id to delete",required=true) @PathVariable("deviceId") Long deviceId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Gets Device based on deviceId", nickname = "getDevice", notes = "", response = Device.class, tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The device", response = Device.class),
        @ApiResponse(code = 404, message = "Requested device does not exist.") })
    @RequestMapping(value = "/devices/{deviceId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Device> getDevice(@ApiParam(value = "Device id to get",required=true) @PathVariable("deviceId") Long deviceId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}", Device.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Gets Device based on barcodeNumber", nickname = "getDeviceWithBarcodeNumber", notes = "", response = Device.class, tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The device", response = Device.class),
        @ApiResponse(code = 404, message = "Requested device does not exist.") })
    @RequestMapping(value = "/devices/barcodeNumber/{barcodeNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Device> getDeviceWithBarcodeNumber(@ApiParam(value = "barcodeNumber of device",required=true) @PathVariable("barcodeNumber") String barcodeNumber) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}", Device.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Gets Device based on serialNumber", nickname = "getDeviceWithSerialNumber", notes = "", response = Device.class, tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The device", response = Device.class),
        @ApiResponse(code = 404, message = "Requested device does not exist.") })
    @RequestMapping(value = "/devices/serialNumber/{serialNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Device> getDeviceWithSerialNumber(@ApiParam(value = "serialNumber of device",required=true) @PathVariable("serialNumber") String serialNumber) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}", Device.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Gets all Devices", nickname = "getDevices", notes = "", response = Device.class, responseContainer = "List", tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "All Devices", response = Device.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/devices",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Device>> getDevices() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}, {  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Gets Devices borrowed by userScdId", nickname = "getDevicesBorrowedBy", notes = "", response = Device.class, responseContainer = "List", tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Devices borrowed by userScdId", response = Device.class, responseContainer = "List") })
    @RequestMapping(value = "/devices/borrowed-by/{userScdId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Device>> getDevicesBorrowedBy(@ApiParam(value = "User",required=true) @PathVariable("userScdId") Long userScdId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}, {  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Gets Devices based on serialNumber like", nickname = "getDevicesWithSerialNumberLike", notes = "", response = Device.class, responseContainer = "List", tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Devices with serial number like", response = Device.class, responseContainer = "List") })
    @RequestMapping(value = "/devices/serialNumber/like/{serialNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Device>> getDevicesWithSerialNumberLike(@ApiParam(value = "serialNumber of device",required=true) @PathVariable("serialNumber") String serialNumber) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}, {  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Updates Device based on deviceId", nickname = "updateDevice", notes = "", response = Device.class, tags={ "Device", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Device created", response = Device.class),
        @ApiResponse(code = 404, message = "Device not found") })
    @RequestMapping(value = "/devices/{deviceId}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<Device> updateDevice(@ApiParam(value = "Device id to update",required=true) @PathVariable("deviceId") Long deviceId,@ApiParam(value = "Device that needs to be updated" ,required=true )  @Valid @RequestBody Device body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"deviceType\" : {    \"orderNumber\" : \"orderNumber\",    \"price\" : 2.027123023002322,    \"supplier\" : {      \"name\" : \"name\",      \"id\" : 3    },    \"objectTypeName\" : \"objectTypeName\",    \"id\" : 7,    \"classification\" : 9,    \"version\" : \"version\",    \"manufacturer\" : \"manufacturer\"  },  \"owner\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"barcodeNumber\" : \"barcodeNumber\",  \"serialNumber\" : \"serialNumber\",  \"addDateString\" : \"addDateString\",  \"project\" : {    \"name\" : \"name\",    \"id\" : 4  },  \"holder\" : {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"flagWrite\" : true,    \"superiorFirstName\" : \"superiorFirstName\",    \"flagRead\" : true,    \"flagBorrow\" : true,    \"flagAdmin\" : true,    \"flagRevision\" : true,    \"id\" : 1,    \"flagInventory\" : true,    \"email\" : \"email\",    \"superiorLastName\" : \"superiorLastName\"  },  \"companyOwner\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"inventoryRecord\" : {    \"inventoryState\" : { },    \"id\" : 1  },  \"revision\" : {    \"revisionInterval\" : 1,    \"lastRevisionDateString\" : \"lastRevisionDateString\",    \"id\" : 7  },  \"comment\" : \"comment\",  \"id\" : 0,  \"deviceState\" : {    \"name\" : \"name\",    \"id\" : 2  },  \"department\" : {    \"name\" : \"name\",    \"id\" : 5  },  \"calibration\" : {    \"calibrationInterval\" : 1,    \"lastCalibrationDateString\" : \"lastCalibrationDateString\",    \"id\" : 6  },  \"defaultLocation\" : \"defaultLocation\"}", Device.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default DevicesApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
