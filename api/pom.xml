<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>inventory-service</artifactId>
		<groupId>cz.siemens.inventory.service</groupId>
		<version>1.1.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>inventory-service-api</artifactId>
	<name>API Layer</name>

	<dependencies>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>1.5.18</version>
		</dependency>
		<dependency>
			<groupId>cz.siemens.inventory.service</groupId>
			<artifactId>inventory-persistence</artifactId>
			<version>1.0.0</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>clean-previously-generated-files</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/main/java/cz/siemens/inventory/api/gen</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>generate-model-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/common-models.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.model</basePackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.model</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-device-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/device-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.device</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.device.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.device</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-company-owner-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/company-owner-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.company-owner</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.company-owner.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.company-owner</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-department-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/department-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.department</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.department.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.department</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-borrow-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/borrow-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.borrow</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.borrow.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.borrow</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-device-state-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/device-state-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.device-state</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.device-state.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.device-state</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-device-type-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/device-type-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.device-type</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.device-type.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.device-type</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-supplier-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/supplier-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.supplier</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.supplier.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.supplier</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-project-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/project-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.project</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.project.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.project</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-inventory-record-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/inventory-record-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.inventory-record</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.inventory-record.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.inventory-record</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-user-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/user-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.user</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.user.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.user</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-electric-revision-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/electric-revision-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.electric-revision</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.electric-revision.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.electric-revision</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-calibration-source-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.api.gen</apiPackage>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<inputSpec>${project.basedir}/src/main/resources/rest/calibration-api.yaml</inputSpec>
							<language>spring</language>
							<modelPackage>cz.siemens.inventory.api.gen.model</modelPackage>
							<output>src</output>
							<configOptions>
								<basePackage>cz.siemens.inventory.api.gen.calibration</basePackage>
								<configPackage>cz.siemens.inventory.api.gen.calibration.config</configPackage>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<interfaceOnly>true</interfaceOnly>
								<invokerPackage>cz.siemens.inventory.api.gen.calibration</invokerPackage>
								<java8>true</java8>
								<library>spring-boot</library>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>

					<!-- SWAGGER DOCUMENTATION -->
					<execution>
						<id>generate-device-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<generateModelDocumentation>true</generateModelDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/device-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/device</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-device-type-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/device-type-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/device-type</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-borrow-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/borrow-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/borrow</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-company-owner-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/company-owner-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/company-owner</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-department-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/department-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/department</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-device-state-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/device-state-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/device-state</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-supplier-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/supplier-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/supplier</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-project-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/project-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/project</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-inventory-record-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/inventory-record-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/inventory-record</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-user-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/user-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/user</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-electric-revision-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/electric-revision-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/electric-revision</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-calibration-documentation</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>cz.siemens.inventory.gen.api</apiPackage>
							<generateApiDocumentation>true</generateApiDocumentation>
							<inputSpec>${project.basedir}/src/main/resources/rest/calibration-api.yaml</inputSpec>
							<language>html2</language>
							<output>src/main/resources/static/documentation/calibration</output>
							<configOptions>
								<sourceFolder>main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>